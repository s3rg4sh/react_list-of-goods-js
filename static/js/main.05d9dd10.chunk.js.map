{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPH","SORT_FIELD_LENGTH","App","useState","isReversed","setReversed","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,iBAClBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAAqE,IAAlCH,EAAiC,EAAjCA,UAAiC,IAAtBF,kBAAsB,SAC5DM,EAAa,YAAOD,GAqB1B,OAnBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXX,GACFM,EAAcM,UAGTN,EAMcO,CACnBlB,EAAiB,CAAEO,YAAWF,eAGhC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYd,IAAcN,IAE5BqB,QAAS,WACPd,EAAaP,IANjB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYd,IAAcL,IAE5BoB,QAAS,WACPd,EAAaN,IANjB,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAAS,WACPhB,GAAaD,IANjB,sBAYgB,KAAdE,GAAoBF,IAElB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,EAAa,IACbF,GAAY,IALhB,sBAaN,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05d9dd10.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPH = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed = false }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPH:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPH);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}